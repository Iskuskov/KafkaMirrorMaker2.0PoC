version: '2'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
  kafkaA1:
    image:  wurstmeister/kafka:1.0.1
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafkaA1
      KAFKA_CREATE_TOPICS: "test:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181/kba
  kafkaA2:
    image:  wurstmeister/kafka:1.0.1
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafkaA2
      KAFKA_CREATE_TOPICS: "test:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181/kba
  kafkaB1:
    image:  wurstmeister/kafka:2.12-2.2.1
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafkaB1
      KAFKA_CREATE_TOPICS: "test:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181/kb2
  kafkaB2:
    image:  wurstmeister/kafka:2.12-2.2.1
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafkaB2
      KAFKA_CREATE_TOPICS: "test:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181/kb2
  mirror:
    image: thiagoquintoandar/kafka:mm-cg-sync
    entrypoint: connect-mirror-maker.sh
    command: mm2.properties
    ports:
    - 7072:7072
    - 7071:7071
    environment:
      KAFKA_JMX_OPTS: "-Djava.rmi.server.hostname=192.168.1.180
      -Dcom.sun.management.jmxremote=true
      -Dcom.sun.management.jmxremote.port=7072
      -Dcom.sun.management.jmxremote.rmi.port=7072
      -Dcom.sun.management.jmxremote.local.only=false
      -Dcom.sun.management.jmxremote.authenticate=false
      -Dcom.sun.management.jmxremote.ssl=false"
      KAFKA_OPTS: "-javaagent:/opt/kafka/prometheus/jmx_prometheus_javaagent-0.12.0.jar=7071:/opt/kafka/prometheus/configs/prometheus_exporter.yaml"
      KAFKA_ADVERTISED_HOST_NAME: mirror
      KAFKA_CREATE_TOPICS: "test:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181/mirror
    volumes:
      - ./mm2.properties:/mm2.properties
      - ./prometheus/exporter:/opt/kafka/prometheus/configs
  mysql:
    image: debezium/example-mysql:1.0
    ports:
     - 3306:3306
    environment:
     - MYSQL_ROOT_PASSWORD=debezium
     - MYSQL_USER=mysqluser
     - MYSQL_PASSWORD=mysqlpw
  connect:
    image: debezium/connect:1.0
    ports:
     - 8083:8083
    environment:
     - BOOTSTRAP_SERVERS=kafkaA1:9092,kafkaA2:9092
     - GROUP_ID=1
     - CONNECT_CONNECTOR_CLIENT_CONFIG_OVERRIDE_POLICY=All
     - CONFIG_STORAGE_TOPIC=my_connect_configs
     - OFFSET_STORAGE_TOPIC=my_connect_offsets
     - STATUS_STORAGE_TOPIC=my_connect_statuses
  proxy:
    image: grepplabs/kafka-proxy:latest
    ports:
      - 9092:9092
      - 19092:19092
      - 29092:29092
    command:
      - 'server'
      - '--log-format=json'
      - '--bootstrap-server-mapping=kafkaB1:9092,proxy:19092'
      - '--bootstrap-server-mapping=kafkaB2:9092,proxy:29092'
      - '--proxy-request-buffer-size=32768'
      - '--proxy-response-buffer-size=32768'
      - '--proxy-listener-read-buffer-size=32768'
      - '--proxy-listener-write-buffer-size=131072'
      - '--kafka-connection-read-buffer-size=131072'
      - '--kafka-connection-write-buffer-size=32768'
  prometheus:
    image: prom/prometheus:v2.1.0
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    restart: always
  grafana:
    image: grafana/grafana
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./grafana/config.monitoring
    restart: always

volumes:
  prometheus_data: {}
  grafana_data: {}
